#!/bin/bash
[[ -v VERBOSE ]] && set -x
set -eu

# The `EXTRA_HOSTS` environment variable allows the injection of dynamic hosts
# via the environment option of `docker-compose`. `docker-compose` parses
# the YAML before it evaluates the environment variables, this means in effect
# that one cannot inject a dynamic amount of extra hosts via environment
# variables.
#
# The value of the `EXTRA_HOSTS` variable is expected to consist of IP addresses
# at the start of each entry followed by the hostnames it should map to. The
# entries are to be separated by a semicolon (`;`).
#
# ## Examples
#
#     $ EXTRA_HOSTS='1.2.3.4 www.google.com www.google.de;5.6.7.9 www.fleshgrinder.com' docker-compose up
#
# The contents of the `/etc/hosts` file of a fresh image would afterwards look
# as follows:
#
#     127.0.0.1     localhost
#     ::1   localhost ip6-localhost ip6-loopback
#     fe00::0       ip6-localnet
#     ff00::0       ip6-mcastprefix
#     ff02::1       ip6-allnodes
#     ff02::2       ip6-allrouters
#     172.19.0.2    c6b6533f9d50
#     1.2.3.4 google.com
#     5.6.7.8 fleshgrinder.com www.fleshgrinder.com
if [[ -v EXTRA_HOSTS ]]; then
    IFS_BAK=${IFS}
    IFS=';'
    for extra_host in ${EXTRA_HOSTS}; do
        echo "${extra_host}" >> /etc/hosts
    done
    IFS=${IFS_BAK}
    unset IFS_BAK
fi

# This creates a space separated list of all environment variable names.
env_vars=
for line in $(env); do
    env_vars="${env_vars} \$${line%=*}"
done

# We iterate through all configuration files and run them through `envsubst`.
# We use the list of existing environment variables to ensure that we replace
# only those variables for which we actually have values, leaving everything
# else untouched. This ensures that we are not replacing built-in variables of
# programs.
shopt -s globstar nullglob
for src in /srv/*/config/**/*; do
    [[ -f "${src}" ]] || continue
    dst=${src##*/config/}
    dst=/usr/local/etc/${dst}
    mkdir -p "$(dirname "${dst}")"
    envsubst "${env_vars}" < "${src}" > "${dst}"
done
