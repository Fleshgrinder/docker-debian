#!/bin/bash
[[ -v VERBOSE ]] && set -x
set -eu

# Ensure that all environment variables that are in the .env file are actually
# present in the current environment.
if [[ -f .env ]]; then
    while read -r line; do
        [[ "${line}" != #* ]] || continue

        var=${line%%=*}
        if [[ ! -v "${var}" || -z "${var}" ]]; then
            echo "[err] ${var} must be defined and not empty" >&2
            exit 64
        fi
    done < .env
fi

# This creates a space separated list of all environment variable names.
env_vars=
for line in $(env); do
    env_vars="${env_vars} \$${line%=*}"
done

# We iterate through all configuration files and run them through `envsubst`.
# We use the list of existing environment variables to ensure that we replace
# only those variables for which we actually have values, leaving everything
# else untouched. This ensures that we are not replacing built-in variables of
# programs.
shopt -s globstar nullglob
for src in /srv/*/config/**/*; do
    [[ -f "${src}" ]] || continue
    dst=${src##*/config/}
    dst=/usr/local/etc/${dst}
    mkdir -p "$(dirname "${dst}")"
    envsubst "${env_vars}" < "${src}" > "${dst}"
done
